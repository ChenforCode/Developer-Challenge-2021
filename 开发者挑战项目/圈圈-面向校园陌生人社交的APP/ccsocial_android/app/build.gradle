apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.huawei.agconnect'

def static getGitVersion() {
    try {
        return 'git rev-parse --short HEAD'.execute().text.trim()
    } catch (Throwable th) {
        th.printStackTrace()
        return ""
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.appTargetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        buildConfigField "String", "GIT_REVISION", "\"${getGitVersion()}\""
        buildConfigField "String", "BUILD_DATE", "\"${new Date().toLocaleString()}\""
        multiDexEnabled true

        ndk {
//            abiFilters "arm64-v8a", "armeabi-v7a", "x86", "x86_64"
            abiFilters "armeabi-v7a"
        }


    }

    signingConfigs {
        debug { storeFile file("debug.keystore") }

        release {
            storeFile file('release.keystore')
            storePassword 'thisiskeystorepassword'
            keyAlias 'nim_demo'
            keyPassword 'thisiskeypassword'
        }
    }
       //09fd4efd3e28e9bf1f449ecec7d34bfe  ee20324fba1c7f4ad7a4a207e7f08e8d
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            manifestPlaceholders = [AMAP_KEY: "90dcddf98b32fd1f85fc014ad13721d2"]
            ext.enableCrashlytics = false
        }

        release {
            shrinkResources true
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), 'proguard.cfg'
            signingConfig signingConfigs.release
            manifestPlaceholders = [AMAP_KEY: "90dcddf98b32fd1f85fc014ad13721d2"]
            ext.enableCrashlytics = true
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res', 'res-chatroom', 'res-rp']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs', 'libs-sdk']
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    dexOptions {
        preDexLibraries false
        jumboMode true
        javaMaxHeapSize "4g"
    }

    packagingOptions {
//        exclude 'META-INF/LICENSE.txt'
//        exclude 'META-INF/NOTICE.txt'
//        doNotStrip '*/mips/*.so'
//        doNotStrip '*/mips64/*.so'
        pickFirst 'lib/arm64-v8a/libRSSupport.so'
        pickFirst 'lib/armeabi-v7a/libRSSupport.so'
        pickFirst 'lib/armeabi-v7a/libBaiduMapSDK_map_v5_4_4.so'
        pickFirst 'lib/armeabi-v7a/libBaiduTraceSDK_v3_1_4.so'
        pickFirst 'lib/x86/libRSSupport.so'
        pickFirst 'lib/x86_64/libRSSupport.so'

        pickFirst 'lib/arm64-v8a/librsjni.so'
        pickFirst 'lib/armeabi-v7a/librsjni.so'
        pickFirst 'lib/x86/librsjni.so'
        pickFirst 'lib/x86_64/librsjni.so'

        pickFirst 'lib/arm64-v8a/librsjni_androidx.so'
        pickFirst 'lib/armeabi-v7a/librsjni_androidx.so'
        pickFirst 'lib/x86/librsjni_androidx.so'
        pickFirst 'lib/x86_64/librsjni_androidx.so'
        pickFirst 'lib/armeabi-v7a/libnertc_sdk.so'

        exclude 'META-INF/rxjava.properties'
    }

    aaptOptions {
        cruncherEnabled = false
        useNewCruncher = false
    }

    flavorDimensions "rc"


    compileOptions {
        sourceCompatibility rootProject.ext.appSourceCompatibility
        targetCompatibility rootProject.ext.appTargetCompatibility
    }

    repositories {
        flatDir {
            dirs 'aar-sdk'
        }
    }

    dataBinding {
        enabled = true
    }
}

apply plugin: 'com.google.gms.google-services'

dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')
    implementation fileTree(include: '*.aar', dir: 'aar-sdk')
//    releaseImplementation fileTree(name: "nim_ysfkit_${rootProject.ext.versionName}", ext: "aar")
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.2'
    implementation project(':jrmfRpWalletlib')
    implementation project(path: ':framework')

    api rootProject.ext.nertcSdk

    //debugImplementation project(':plugins:sf')

    implementation 'com.huawei.hms:push:4.0.4.301'
    implementation 'com.meizu.flyme.internet:push-internal:3.9.7'

    implementation 'com.netease.nimlib:jsbridge:1.3.1'

    implementation 'com.google.android.gms:play-services-base:17.1.0'
    implementation 'com.google.firebase:firebase-messaging:20.1.0'
    implementation 'com.google.firebase:firebase-core:17.2.3'
    //implementation 'com.crashlytics.sdk.android:crashlytics:2.9.9'
    implementation 'net.zetetic:android-database-sqlcipher:3.5.9'

    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    // Java8 support for Lifecycles
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.1.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation project(path: ':faceunity')
    implementation project(path: ':G2:nertcvideocall')
    implementation project(path: ':G2:ui')
    implementation project(path: ':uikit')
    implementation project(path: ':rtskit')


    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'

    //FrameWork
//    //网络请求
    implementation 'com.squareup.okhttp3:okhttp:3.8.1'
    implementation 'com.squareup.okio:okio:1.13.0'
    //必须使用
    implementation 'com.lzy.net:okgo:2.1.4'        //可以单独使用，不需要依赖下方的扩展包
    implementation 'com.lzy.net:okrx:0.1.2'        //RxJava扩展支持，根据需要添加
    implementation 'com.lzy.net:okserver:1.1.3'    //下载管理和上传管理扩展，根据需要添加
//    implementation 'com.lzy.net:okgo:3.0.4'
//    implementation 'com.lzy.net:okhttputils:+'  //版本号使用 + 可以自动引用最新版
//    implementation 'com.lzy.net:okhttpserver:2.0.5' //版本号使用 + 可以自动引用最新版
//    //工具类
    implementation 'com.blankj:utilcodex:1.29.0'
    implementation 'org.greenrobot:eventbus:3.1.1'
//    沉浸式工具
    // 基础依赖包，必须要依赖
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
// fragment快速实现（可选）
    implementation 'com.gyf.immersionbar:immersionbar-components:3.0.0'


//    // 引入multidex库
    implementation 'com.android.support:multidex:1.0.3'

    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:converter-jackson:2.0.2'
    implementation "com.squareup.retrofit2:converter-scalars:2.1.0"
    implementation "com.squareup.retrofit2:converter-gson:2.1.0"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.2.0"
    implementation "io.reactivex.rxjava2:rxjava:2.0.6"
    implementation "io.reactivex.rxjava2:rxandroid:2.0.1"
    implementation rootProject.ext.avsignallingSdk
}
